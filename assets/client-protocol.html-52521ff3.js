import{_ as i,r as n,o as p,c as s,a as e,b as a,w as t,d as l,e as c}from"./app-a0d85ae6.js";const r={},m=e("h1",{id:"弹弹play专用链-pc版",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#弹弹play专用链-pc版","aria-hidden":"true"},"#"),l(" 弹弹play专用链（PC版）")],-1),u={class:"table-of-contents"},h=e("h2",{id:"关于弹弹play专用链",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#关于弹弹play专用链","aria-hidden":"true"},"#"),l(" 关于弹弹play专用链")],-1),y=e("p",null,[l("弹弹play专用链是用来从其他程序（如浏览器）唤起本机已安装的弹弹play播放器，并执行后续操作的一种协议（protocol）。专用链的前缀为"),e("code",null,"ddplay:"),l("，目前仅PC版本支持专用链。")],-1),_=e("p",null,"弹弹play PC版 v12.2 版本后，支持通过ddplay专用链拉起弹弹play客户端并串流播放在线媒体文件。之前的版本ddplay专用链只能拉起播放本机视频，或创建基于torrent文件和magnet磁力链的下载任务。",-1),v=e("h2",{id:"相关项目或示例",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#相关项目或示例","aria-hidden":"true"},"#"),l(" 相关项目或示例")],-1),b={href:"https://greasyfork.org/zh-CN/scripts/443916",target:"_blank",rel:"noopener noreferrer"},D=c(`<h2 id="串流播放网络视频" tabindex="-1"><a class="header-anchor" href="#串流播放网络视频" aria-hidden="true">#</a> 串流播放网络视频</h2><ol><li>格式</li></ol><p>比如现在有一个mp4视频的串流地址： <code>http://localhost:8888/D%3A/%E8%A7%86%E9%A2%91/Princess%20Principal/%5BHYSUB%5DPrincess%20Principal%5B01v2%5D%5BGB_MP4%5D%5B1280X720%5D.mp4</code></p><p>在它的前面添加一个 <code>ddplay:</code> 协议，浏览器即可拉起弹弹play进行在线播放。请注意，ddplay协议以 <code>ddplay:</code> 开头，后面没有 <code>//</code>。 <code>ddplay:http://localhost:8888/D%3A/%E8%A7%86%E9%A2%91/Princess%20Principal/%5BHYSUB%5DPrincess%20Principal%5B01v2%5D%5BGB_MP4%5D%5B1280X720%5D.mp4</code></p><p>由于url有可能包含各种特殊字符，<strong>我们推荐先将它整体编码后再进行拼接</strong>，即用 encodeURIComponent() 或其他等效方式进行URI编码，弹弹play也是可以识别的。注意前面的 ddplay: 前缀不变。 <code>ddplay:http%3A%2F%2Flocalhost%3A8888%2FD%253A%2F%25E8%25A7%2586%25E9%25A2%2591%2FPrincess%2520Principal%2F%255BHYSUB%255DPrincess%2520Principal%255B01v2%255D%255BGB_MP4%255D%255B1280X720%255D.mp4</code></p><ol start="2"><li>示例</li></ol><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>ddplay:http://clips.vorwaerts-gmbh.de/big_buck_bunny.mp4
ddplay:http%3A%2F%2Fclips.vorwaerts-gmbh.de%2Fbig_buck_bunny.mp4
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>支持串流的协议</li></ol><p>当前弹弹play支持串流的协议包括 http / https / ftp / ftps / rtsp / rtmp / mms / smb</p><ol start="4"><li>附加文件名以辅助文件识别</li></ol><p>因为url中通常不包含文件名等信息，或是文件名隐藏于url的一部分，使用弹弹play打开串流链接时，将无法得知文件真实的信息。</p><p>在弹弹play 12.3版本后，支持添加<code>filePath=</code>参数，您可以用它来向弹弹play提供串流的文件名的真实路径（或仅文件名），以辅助播放器进行弹幕库匹配。 当传入<code>filePath=</code>参数后，弹弹play在显示“关联弹幕库”窗口时，将优先使用此文件路径进行猜测，可以得到更准确的匹配结果。大部分情况下，都不再需要手动输入作品标题进行搜索了。</p><p>使用方式：</p><ul><li>准备好视频的完整本地路径，如果没有完整路径就用文件名：<code>D:\\视频\\2022\\[FLsnow&amp;SumiSora][Kaguya-sama_S3][01][CHS][720p].mp4</code></li><li>加入 <code>filePath=</code> 参数名，然后用分隔符 <code>|</code> 将其拼到串流地址的后面。</li><li>最终字符串类似于 <code>http://clips.vorwaerts-gmbh.de/big_buck_bunny.mp4|filePath=D:\\视频\\2022\\[FLsnow&amp;SumiSora][Kaguya-sama_S3][01][CHS][720p].mp4</code></li><li>将整个字符串用 encodeURIComponent() 编码，前面加上 <code>ddplay:</code>前缀，就是最终的专用链地址了：</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>ddplay:http%3A%2F%2Fclips.vorwaerts-gmbh.de%2Fbig_buck_bunny.mp4%7CfilePath%3DD%3A%E8%A7%86%E9%A2%91%C2%822%5BFLsnow%26SumiSora%5D%5BKaguya-sama_S3%5D%5B01%5D%5BCHS%5D%5B720p%5D.mp4
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="拉起并建立磁力链-magnet-下载任务" tabindex="-1"><a class="header-anchor" href="#拉起并建立磁力链-magnet-下载任务" aria-hidden="true">#</a> 拉起并建立磁力链（magnet）下载任务</h2><ol><li>格式</li></ol><p>在常见的 magnet: 链接前添加 ddplay: 前缀即可，或是将<code>magnet:</code>直接替换为<code>ddplay:</code>。弹弹play支持解析32位和40位的BT hash。</p><ol start="2"><li>示例</li></ol><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>ddplay:magnet:?xt=urn:btih:E7FC73D9E20697C6C440203F5884EF52F9E4BD28
ddplay:?xt=urn:btih:E7FC73D9E20697C6C440203F5884EF52F9E4BD28
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="播放本地视频文件" tabindex="-1"><a class="header-anchor" href="#播放本地视频文件" aria-hidden="true">#</a> 播放本地视频文件</h2><ol><li>格式</li></ol><p>支持通过专用链拉起播放器并播放本地视频文件。</p><p>但是如果是本机app，建议通过命令行而不是专用链的方式进行调用。例如 <code>C:\\dandanplay-x64\\dandanplay.exe D:\\视频\\test.mp4</code></p><p>专用链的调用方式就是在<code>ddplay:</code>后跟随视频文件的完整地址即可，例如 <code>ddplay:D:\\视频\\test.mp4</code>。</p><p>不过，如果是通过浏览器拉起，强烈建议对文件路径进行 encodeURIComponent() 编码：<code>ddplay:D%3A%5C%E8%A7%86%E9%A2%91%5Ctest%20-%20%E5%89%AF%E6%9C%AC.mp4</code></p><ol start="2"><li>附加更多参数</li></ol><p>弹弹play支持在播放本地视频文件时，附加一个或多个本地xml弹幕文件，甚至附加一个外部音轨。多个参数之间通过分隔符 <code>|</code> 来分隔。请注意，这时ddplay:后面的内容 <strong>必须通过 encodeURIComponent() 进行编码</strong>，下面将举例说明。</p><ul><li><p>如果希望播放视频并附加一个弹幕文件，请先拼接成类似这样的字符串：<code>D:\\视频\\test.mp4|D:\\视频\\测试.xml</code></p></li><li><p>如果希望播放视频并附加一个外部音轨，请先拼接成类似这样的字符串：<code>D:\\视频\\test.mkv|D:\\视频\\测试.mka</code></p></li><li><p>如果希望播放视频并附加多个弹幕文件，请先拼接成类似这样的字符串：<code>D:\\视频\\test.mp4|D:\\视频\\测试-1.xml|D:\\视频\\测试-2.xml</code></p></li></ul><p>之后将这个字符串进行编码，并连上<code>ddplay:</code>协议：<code>ddplay:D%3A%5C%E8%A7%86%E9%A2%91%5Ctest.mp4%7CD%3A%5C%E8%A7%86%E9%A2%91%5C%E6%B5%8B%E8%AF%95.xml</code></p><p>大部分情况下是不需要这样做的，因为弹弹play支持自动发现同目录下匹配的字幕、弹幕以及外挂音轨文件。保留此项功能是为了给出更多可自定义的空间。</p><ol start="3"><li>示例</li></ol><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>ddplay:D:\\视频\\test.mp4
ddplay:D:\\视频\\test - 副本.mp4
ddplay:D%3A%5C%E8%A7%86%E9%A2%91%5Ctest%20-%20%E5%89%AF%E6%9C%AC.mp4
ddplay:D:\\视频\\test.mp4|D:\\视频\\测试.xml
ddplay:D%3A%5C%E8%A7%86%E9%A2%91%5Ctest.mp4%7CD%3A%5C%E8%A7%86%E9%A2%91%5C%E6%B5%8B%E8%AF%95.xml
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,33);function g(x,A){const d=n("router-link"),o=n("ExternalLinkIcon");return p(),s("div",null,[m,e("nav",u,[e("ul",null,[e("li",null,[a(d,{to:"#关于弹弹play专用链"},{default:t(()=>[l("关于弹弹play专用链")]),_:1})]),e("li",null,[a(d,{to:"#相关项目或示例"},{default:t(()=>[l("相关项目或示例")]),_:1})]),e("li",null,[a(d,{to:"#串流播放网络视频"},{default:t(()=>[l("串流播放网络视频")]),_:1})]),e("li",null,[a(d,{to:"#拉起并建立磁力链-magnet-下载任务"},{default:t(()=>[l("拉起并建立磁力链（magnet）下载任务")]),_:1})]),e("li",null,[a(d,{to:"#播放本地视频文件"},{default:t(()=>[l("播放本地视频文件")]),_:1})])])]),h,y,_,v,e("ul",null,[e("li",null,[e("a",b,[l("Emby调用弹弹play"),a(o)])])]),D])}const E=i(r,[["render",g],["__file","client-protocol.html.vue"]]);export{E as default};
