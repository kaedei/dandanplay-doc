import{_ as n,r as o,o as r,c,a as e,d as a,b as t,e as s}from"./app-a0d85ae6.js";const l={},i=s('<h1 id="资源搜索功能相关问题" tabindex="-1"><a class="header-anchor" href="#资源搜索功能相关问题" aria-hidden="true">#</a> 资源搜索功能相关问题</h1><p>目录：</p><p>1. 资源搜索功能是什么 &amp; 为什么要下线资源搜索</p><p>2. 资源搜索节点是什么</p><p>3. 恢复客户端资源搜索功能的方法</p><p></p><p><strong>1-资源搜索功能是什么 &amp; 为什么要下线资源搜索</strong></p><p>“资源搜索”功能设计的初衷是使用户在不跳出弹弹play应用的情景下，也能方便查找到资源，享受到“查找-下载-播放-记录”的一条龙服务。这个功能其实是花园网站的一个简单的“中转”，但用户不必再打开浏览器、切换程序，到处复制粘贴磁力链接和种子文件。</p><p>弹弹play播放器从2012年上线开始，为用户免费提供了长达8年的稳定服务，我们围绕“本地视频播放+弹幕+追番”这一核心功能发展设计了诸多如媒体库、下载器、追番记录等实用的模块，资源搜索功能也算在其中。但是由于很多原因，我们几个月前就已经开始考虑停止提供资源搜索服务，包括：</p><p>* 大量用户误解了资源搜索功能的目的。弹弹play播放器和视频网站不同，不可以在线观看，只能播放电脑/手机上已有的视频文件；</p><p>* 弹弹play完全免费提供给用户使用，没有任何收入和付费功能，因此提供资源搜索功能既消耗了服务器资源以及维护资源，又占用开发者精力，最终拉高了运营成本；</p><p>* “资源搜索”本身存在的争议，提高了弹弹play继续长久运营下去的风险</p><p>这些问题使我们不得不重新考虑资源搜索功能存在的必要性。经过内部讨论与小范围调研，我们决定主动下线资源搜索功能。</p><p><strong>2-资源搜索节点是什么</strong></p><p>资源搜索节点是弹弹play客户端与资源站（如花园）之间的一个转发层，因为大多数资源站是没有公开API（API：应用程序接口）可使用的，所以我们架设了一个节点，将资源站传输的网页重新格式化成标准json格式的数据，方便展示在各个平台的客户端中。流程如图：</p><p><img src="https://mmbiz.qpic.cn/mmbiz_png/8FH2fYzPNVh7T7kLEzyT65Fnicesyic5HFYV6ibnS9ZltHFiawK0ZRTlicUD9H1JyVSg5iaV4ZDvqzn8trnyvWKiacRfg/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1"></p><p>节点下线之后，播放器因为失去了中间的转发层，又不能直接连接到资源站（数据格式不同），将无法再继续使用资源搜索功能。</p><p><strong>3-如何恢复现有客户端的资源搜索功能</strong></p><p>了解了上述原理，我们可以知道，目前其实是缺少了一个能够满足数据格式（API）要求的资源搜索节点。弹弹play在设置页中提供了“资源搜索节点”的配置项，在正确填写后即可恢复相应的UI。最近有很多同学来问此处应该如何设置，下面将简单解释一下，一共有两种方法：</p>',19),d={href:"https://github.com/kansaer/dandanplay-apiNode",target:"_blank",rel:"noopener noreferrer"},m={href:"https://github.com/kaedei/dandanplay-libraryindex/blob/master/api/ResourceService.md",target:"_blank",rel:"noopener noreferrer"},_=e("p",null,"定位到【弹弹play->设置->网络与更新-自定义端点】处，将节点地址填写到第二个文本框中，注意格式",-1),h=e("p",null,[e("img",{src:"https://txc.gtimg.com/data/104929/2021/0420/a5ce2a93685605bbd649d545a92285d9.png",alt:"a5ce2a93685605bbd649d545a92285d9.png"})],-1),b=e("p",null,"（不是填图上的地址，请按实际情况填写节点服务器地址）",-1),g=e("p",null,"如果填写正确，回到首页后即可恢复以前的功能了。如果仍然不行，请查看你的WebServer的log，检查URL是否正确处理并返回了数据。",-1);function u(y,f){const p=o("ExternalLinkIcon");return r(),c("div",null,[i,e("p",null,[a("A) 使用第三方收集提供的节点地址列表："),e("a",d,[a("https://github.com/kansaer/dandanplay-apiNode"),t(p)])]),e("p",null,[a("B) 或是自行搭建节点服务器：自己写代码实现节点API，文档地址在 "),e("a",m,[a("https://github.com/kaedei/dandanplay-libraryindex/blob/master/api/ResourceService.md"),t(p)]),a(" 。例如，你可以用php或是C#写一个服务器端，然后将他们部署到Apache/IIS上，此时可以得到一个网站地址，例如 localhost:5000")]),_,h,b,g])}const k=n(l,[["render",u],["__file","resource-service.html.vue"]]);export{k as default};
