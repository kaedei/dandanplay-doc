import{_ as o,r,o as d,c as h,a as e,d as a,b as l,w as n,e as c}from"./app-a0d85ae6.js";const s={},p=c('<h1 id="项目简介" tabindex="-1"><a class="header-anchor" href="#项目简介" aria-hidden="true">#</a> 项目简介</h1><h2 id="_00-弹弹play是什么" tabindex="-1"><a class="header-anchor" href="#_00-弹弹play是什么" aria-hidden="true">#</a> 00. 弹弹play是什么？</h2><p>弹弹play是一款视频播放器软件，它的特点是在播放本地视频时，能够自动识别出视频内容，并显示来自于互联网上的弹幕。</p><p>除此之外，弹弹play还提供了一些围绕视频相关的方便的功能，比如：</p><ul><li>媒体库，用于管理本地视频</li><li>BT下载，用于下载BT种子文件</li><li>远程访问，可以在其他设备上访问弹弹play的媒体库</li><li>AI语音识别、AI字幕翻译等功能</li></ul><h2 id="_01-为什么要做弹弹play这样一个产品" tabindex="-1"><a class="header-anchor" href="#_01-为什么要做弹弹play这样一个产品" aria-hidden="true">#</a> 01. 为什么要做弹弹play这样一个产品？</h2><p>最一开始，弹弹play是作为一个简单的“本地弹幕+本地视频播放器”出现的，目的是解决播放本地高清视频时没有弹幕的问题。它的前身是嵌入在AcDown下载器中的AcPlay播放器。弹弹play项目启动于2013年初。</p><p>但是互联网上视频众多，即使是某个动画的同一集，都会有大量字幕组发行大量不同版本但是内容相同的视频文件，这些视频是独立而分散的，比如在B站经常会看到某个新番有众多字幕组的多个版本，而这些版本间的弹幕并不互通（这个情况发生在2014年以前）。所以为了解决多个视频共享弹幕的问题，我们决定引入服务器端。</p><p>有了服务器端之后，就可以针对每个节目建立唯一的弹幕池（弹弹play里叫弹幕库），然后让不同的视频关联到同一个弹幕库，获取同一份弹幕，最终解决了不同视频能够共享弹幕的问题。</p><ul><li>弹弹play开放平台，就是基于弹弹play播放器的这个功能（弹幕收发、文件识别）而发展出来的。目的是为了重新组织互联网上复杂混乱的视频文件世界，将它们识别出来并进行归类。</li></ul><h2 id="_02-为什么叫-弹弹play-这个名字" tabindex="-1"><a class="header-anchor" href="#_02-为什么叫-弹弹play-这个名字" aria-hidden="true">#</a> 02. 为什么叫 弹弹play 这个名字？</h2><p>其实就是 弹幕+player（播放器） 的一个简写方式</p><h2 id="_03-弹弹play-是谁开发的" tabindex="-1"><a class="header-anchor" href="#_03-弹弹play-是谁开发的" aria-hidden="true">#</a> 03. 弹弹play 是谁开发的？</h2><p>目前弹弹play拥有多个操作系统的版本，它们的开发人员分别是：</p>',14),_={href:"https://weibo.com/kaedei",target:"_blank",rel:"noopener noreferrer"},u={href:"https://weibo.com/u/2996607392",target:"_blank",rel:"noopener noreferrer"},y=e("li",null,"安卓概念版（v3.x）：xyoye、shine5402",-1),f=e("li",null,"安卓版（v2.x）：shiwentao666",-1),x=e("h2",{id:"_04-遇到问题怎么办",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_04-遇到问题怎么办","aria-hidden":"true"},"#"),a(" 04. 遇到问题怎么办？")],-1),m=e("h2",{id:"下载地址",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#下载地址","aria-hidden":"true"},"#"),a(" 下载地址")],-1);function b(k,w){const i=r("ExternalLinkIcon"),t=r("RouterLink");return d(),h("div",null,[p,e("ul",null,[e("li",null,[a("Windows版/UWP版： @Kaedei "),e("a",_,[a("https://weibo.com/kaedei"),l(i)])]),e("li",null,[a("iOS版/macOS版：@追想画廊· "),e("a",u,[a("https://weibo.com/u/2996607392"),l(i)])]),y,f]),x,e("p",null,[a("可以在 "),l(t,{to:"/other/feedback.html"},{default:n(()=>[a("这里")]),_:1}),a(" 进行反馈，最好可以附上详细的说明文字和截图以方便确定问题。")]),m,e("ul",null,[e("li",null,[e("p",null,[l(t,{to:"/guide/pc.html"},{default:n(()=>[a("PC版/UWP版")]),_:1})])]),e("li",null,[e("p",null,[l(t,{to:"/guide/android.html"},{default:n(()=>[a("安卓概念版")]),_:1})])])])])}const v=o(s,[["render",b],["__file","index.html.vue"]]);export{v as default};
